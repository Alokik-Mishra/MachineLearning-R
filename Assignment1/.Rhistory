## Packages loading/installation
auto_load <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("readr", "tidyverse", "ggplot2", "ggthemes")
auto_load(packages)
## Reading in the files and converting to matrices
X_test <- read_csv("Data/X_test.csv", col_names = FALSE)
X_train <- read_csv("Data/X_train.csv", col_names = FALSE)
y_test <- read_csv("Data/y_test.csv", col_names = FALSE)
y_train <- read_csv("Data/y_train.csv", col_names = FALSE)
X_test <- as.matrix(X_test)
X_train <- as.matrix(X_train)
y_test <- as.matrix(y_test)
y_train <- as.matrix(y_train)
## Initialzing the matrcies and creating the svd
df_lam <- c(rep(0,5000))
w <- matrix(nrow = 7, ncol = 5000)
X_tr_svd <- svd(X_train)
## Looping through to create matrix of coeffieicnts and df(lamba) for different values of lambda
for(j in 1:7){
for(i in 1: 5000) {
w[j,i] <- (solve((diag(i,7) + (t(X_train) %*% (X_train)))) %*% t(X_train) %*% y_train)[j]
df_lam[i] <- sum((X_tr_svd$d)^2/(i + (X_tr_svd$d)^2))
}
}
## Creating joint dataframe for easier navigation with ggplot
w_t <- as_data_frame(t(w))
final_1 <- cbind(w_t, df_lam)
## Plotting the value of coefficients as function of df(lamba)
ggplot(final_1) +
geom_line(aes(df_lam, V1, color = "W1"), show.legend = TRUE) +
geom_line(aes(df_lam, V2, color = "W2"), show.legend = TRUE) +
geom_line(aes(df_lam, V3, color = "W3"), show.legend = TRUE) +
geom_line(aes(df_lam, V4, color = "W4"), show.legend = TRUE) +
geom_line(aes(df_lam, V5, color = "W5"), show.legend = TRUE) +
geom_line(aes(df_lam, V6, color = "W6"), show.legend = TRUE) +
geom_line(aes(df_lam, V7, color = "W7"), show.legend = TRUE) +
ylab("Coefficient value") +
xlab("df(lambda)") +
theme_tufte() +
ggtitle("L2 Regularization and Lambda") +
theme(legend.position = "bottom")
ggsave("Images/L2_reg_dflambda.png")
## Predicting and plotting RMSE of testing data with lambda = 1:50
w_2 <- w[,1:50]
RMSE = c(rep(0,50))
lambda <- c(1:50)
for(i in 1:50) {
y_hat <- X_test %*% w[,i]
RMSE[i] <- (sum((y_test - y_hat)^2)/42)^0.5
}
plt2_df <-  as_data_frame(cbind(lambda, RMSE))
ggplot(plt2_df) +
View(plt2_df)
ggplot(plt2_df) +
geom_line(aes(lambda, RMSE), show.legend = TRUE) +
ylab("RMSE") +
xlab("Lambda") +
theme_tufte() +
ggtitle("RMSE and Lambda") +
theme(legend.position = "bottom")
ggsave("Images/RMSE_lambda.png")
